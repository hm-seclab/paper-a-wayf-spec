



Network Working Group                                          E. Kupris
Internet-Draft                                                          
Intended status: Informational                                 T. Hilbig
Expires: 1 August 2024                                                  
                                                             D. P. Sugar
                                                                        
                                                              T. Schreck
                                                         29 January 2024


        Automated Where Are You From in Multilateral Federations
                             draft-awayf-00

Abstract

   This document introduces a extension to the CTAP2 protocol that
   allows the storage of enterprise federation credentials and the
   enumeration of their corresponding identity providers.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on 1 August 2024.

Copyright Notice

   Copyright (c) 2024 IETF Trust and the persons identified as the
   document authors.  All rights reserved.











Kupris, et al.            Expires 1 August 2024                 [Page 1]

Internet-Draft                   A-WAYF                     January 2024


   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents (https://trustee.ietf.org/
   license-info) in effect on the date of publication of this document.
   Please review these documents carefully, as they describe your rights
   and restrictions with respect to this document.  Code Components
   extracted from this document must include Revised BSD License text as
   described in Section 4.e of the Trust Legal Provisions and are
   provided without warranty as described in the Revised BSD License.

Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   2
     1.1.  Requirements  . . . . . . . . . . . . . . . . . . . . . .   2
     1.2.  Terminology . . . . . . . . . . . . . . . . . . . . . . .   2
   2.  CTAP2 Extension . . . . . . . . . . . . . . . . . . . . . . .   3
     2.1.  Enterprise Federation (enterpriseFed) . . . . . . . . . .   3
       2.1.1.  Feature detection . . . . . . . . . . . . . . . . . .   3
       2.1.2.  Client extension  . . . . . . . . . . . . . . . . . .   4
       2.1.3.  Authenticator extension . . . . . . . . . . . . . . .   4
   3.  CTAP2 efed pinUvAuthToken permission  . . . . . . . . . . . .   5
   4.  CTAP2 Command . . . . . . . . . . . . . . . . . . . . . . . .   5
     4.1.  Prototype authenticatorFederationManagement (0x42)  . . .   6
       4.1.1.  enumerateIdPBegin (0x01)  . . . . . . . . . . . . . .   7
   5.  CTAP2 Status codes  . . . . . . . . . . . . . . . . . . . . .   9
   6.  Security Considerations . . . . . . . . . . . . . . . . . . .   9
   7.  References  . . . . . . . . . . . . . . . . . . . . . . . . .   9
     7.1.  Normative References  . . . . . . . . . . . . . . . . . .   9
     7.2.  Informative References  . . . . . . . . . . . . . . . . .   9
   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .  10

1.  Introduction

1.1.  Requirements

1.2.  Terminology

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in BCP
   14 [RFC2119] [RFC8174] when, and only when, they appear in all
   capitals, as shown here.

   The term "byte" is used in its now-customary sense as a synonym for
   "octet".

   This document makes use of the following terminology:

   authenticator:  An Authenticator is software that implements the CTAP



Kupris, et al.            Expires 1 August 2024                 [Page 2]

Internet-Draft                   A-WAYF                     January 2024


      protocol and is able to create new credentials and make assertions
      on request.  It interacts with a Client through a communication
      channel like CTAPHID, which builds on top of USB HID.

   client:  A Client is software that implements the client-side part of
      the CTAP protocol.  It acts as a middleman between a Authenticator
      and a Relying Party.

   RP:  A Relying Party (RP) is a web-service one can authenticate to
      using the FIDO authentication protocol.  It communicates
      indirectly with an Authenticator through the Client and is
      responsible for initiating a authentication ceremony.

   confidentiality:  Confidentiality relates to the state of data in
      which only authorized entities can comprehend its content.
      Typically, this is ensured through encryption, where only the
      possessor of the correct secret key can decrypt the data and gain
      access to its actual content.

   integrity:  Integrity pertains to the condition of data wherein no
      unauthorized alterations have occurred.  Unintended modifications
      may occur inadvertently, such as a bit-flip resulting from
      hardware failure, or intentionally by an adversary with access to
      the data.  The concept of "protecting data integrity" encompasses
      the ability to identify undesired changes before they can impact a
      system in any conceivable manner.

   authenticity:  Authenticity denotes the ability to confirm that
      specific data has been generated by a particular source.  This
      validation can be implemented through cryptographic concepts such
      as digital signatures or Message Authentication Codes.
      Frequently, a single cryptographic primitive can be employed to
      ensure both integrity and authenticity.

   identity provider:  A identity provider TODO

2.  CTAP2 Extension

   The following section introduces a extension for [CTAP] that
   introduces a new field enterpriseFed which marks a credential as
   belonging to an identity provider.

2.1.  Enterprise Federation (enterpriseFed)

2.1.1.  Feature detection

   Extension identifier:  enterpriseFed




Kupris, et al.            Expires 1 August 2024                 [Page 3]

Internet-Draft                   A-WAYF                     January 2024


   This registration extension allows relying parties to mark a
   discoverable credential as belonging to a federation, i.e. the given
   relying party is a identity provider.  The given extension defaults
   to false.

2.1.2.  Client extension

2.1.2.1.  Client extension input

   create(): A boolean value to indicate that this extension is
   requested by the Relying Party.

   get(): Not applicable.

   partial dictionary AuthenticationExtensionsClientInputs {
     boolean credentialEnterpriseFederation = false;
   };

                      Figure 1: Extension client input

2.1.2.2.  Client extension processing

   None, except creating the authenticator extension input from the
   client extension input.

   NOTE: For non-discoverable credentials, the
   credentialEnterpriseFederation flag has no effect on the
   authenticators behaviour.

2.1.2.3.  Client extension output

   None.  The authenticator returns the result in the authenticator
   extension output.

2.1.3.  Authenticator extension

2.1.3.1.  Authenticator extension input

   Boolean asking the authenticator to mark the creadential as belonging
   to an identity provider.  The platform sends the
   authenticatorMakeCredential request with the following CBOR map entry
   in the "extensions" field to the authenticator:

   *  "enterpriseFed":<enterpriseFed Value>

   NOTE: The extension SHOULD be ignored for non-discoverable
   credentials.




Kupris, et al.            Expires 1 August 2024                 [Page 4]

Internet-Draft                   A-WAYF                     January 2024


   {
       ...
       6: {"enterpriseFed": true},
       ...
   }

     Figure 2: Sample CTAP2 authenticatorMakeCredential Request (CBOR)

2.1.3.2.  Authenticator extension processing

   The authenticator checks whether the authenticatorMakeCredential's
   options.rk option is present and true.  If so, the authenticator
   stores the given information with the created credential.  If not,
   the authenticator SHOULD ignore the extension.

2.1.3.3.  Authenticator extension output

   If the authenticator has set the extensions value for the credential:

   *  "enterpriseFed":<enterpriseFed Value>

   Else:

   *  None.

3.  CTAP2 efed pinUvAuthToken permission

   The following pinUvAuthToken permission extends the list of existing
   pinUvAuthTokens.

   +==========+=========+=====+=======+=================================+
   |Permission|   Role  |Value| RP ID |Definition                       |
   |   name   |         |     |       |                                 |
   +==========+=========+=====+=======+=================================+
   |   efed   |Enumerate| 0x40|Ignored|This allows the pinUvAuthToken to|
   |          | Identity|     |       |be used with the                 |
   |          |Providers|     |       |authenticatorFederationManagement|
   |          |         |     |       |command.  The rpId parameter is  |
   |          |         |     |       |ignored for this permission.     |
   +----------+---------+-----+-------+---------------------------------+

                                  Table 1

4.  CTAP2 Command







Kupris, et al.            Expires 1 August 2024                 [Page 5]

Internet-Draft                   A-WAYF                     January 2024


4.1.  Prototype authenticatorFederationManagement (0x42)

   This command is used by the platform to manage federated credentials
   on the authenticator.

   It takes the following input parameters:

   +=================+========+=========+=================================+
   |  Parameter name |  Data  |Required?|Definition                       |
   |                 |  type  |         |                                 |
   +=================+========+=========+=================================+
   |subCommand (0x01)|Unsigned| Required|subCommand currently being       |
   |                 |Integer |         |requested                        |
   +-----------------+--------+---------+---------------------------------+
   |pinUvAuthProtocol|Unsigned| Optional|PIN/UV protocol version selected |
   |      (0x02)     |Integer |         |by platform.                     |
   +-----------------+--------+---------+---------------------------------+
   |  pinUvAuthParam |  Byte  | Optional|Result of calling                |
   |      (0x03)     | String |         |authenticate(pinUvAuthToken,     |
   |                 |        |         |Prototype                        |
   |                 |        |         |authenticatorFederationManagement|
   |                 |        |         |(0x42))                          |
   +-----------------+--------+---------+---------------------------------+

                                  Table 2

   The list of sub commands for credential management is:

              +=========================+===================+
              |     subCommand Name     | subCommand Number |
              +=========================+===================+
              |    enumerateIdPBegin    |        0x01       |
              +-------------------------+-------------------+
              | enumerateIdPsGetNextIdP |        0x02       |
              +-------------------------+-------------------+

                                  Table 3

   On success, authenticator returns the following structure in its
   response:











Kupris, et al.            Expires 1 August 2024                 [Page 6]

Internet-Draft                   A-WAYF                     January 2024


      +===========+=============================+===================+
      | Parameter |          Data type          |     Definition    |
      |    name   |                             |                   |
      +===========+=============================+===================+
      |    idp    | PublicKeyCredentialRpEntity |  IdP Information  |
      |   (0x01)  |                             |                   |
      +-----------+-----------------------------+-------------------+
      | totalIdps |       Unsigned Integer      |  total number of  |
      |   (0x02)  |                             |  IdPs present on  |
      |           |                             | the authenticator |
      +-----------+-----------------------------+-------------------+

                                  Table 4

4.1.1.  enumerateIdPBegin (0x01)

   Following operations are preformed to enumerate the identity
   providers present on the authenticator:

   *  Optionally, the platform gets a pinUvAuthToken from the
      authenticator with the efed permission.

   *  The Platform sends a authenticatorEnumerateIdP command with the
      following parameters:

      -  pinUvAuthProtocol (0x01): as selected when getting the shared
         secret (Optional).

      -  pinUvAuthParam (0x02): authenticate(pinUvAuthToken,
         authenticatorFederationManagement (0x42)) (Optional).

   *  Authenticator on receiving such request performs following
      procedures:

      1.  If pinUvAuthParam is missing from the input map, go to 6.

      2.  If pinUvAuthProtocol is not supported, return
          CTAP1_ERR_INVALID_PARAMETER.

      3.  Authenticator calls verify(pinUvAuthToken,
          authenticatorFederationManagement (0x42), pinUvAuthParam).

      4.  If pinUvAuthParam verification fails, authenticator returns
          CTAP2_ERR_PIN_AUTH_INVALID error.

      5.  The authenticator verifies that the pinUvAuthToken has the
          efed permission.  If not, return CTAP2_ERR_PIN_AUTH_INVALID.




Kupris, et al.            Expires 1 August 2024                 [Page 7]

Internet-Draft                   A-WAYF                     January 2024


      6.  If no discoverable credentials exist on this authenticator,
          return CTAP2_ERR_NO_IDPS.

      7.  Locate all credentials that are eligible for retrieval under
          the specified criteria:

          1.  Locate all discoverable credentials that are created by
              this authenticator that have the enterpriseFed flag set to
              true.

          2.  Create an applicable credentials list populated with the
              located credentials.

          3.  Iterate through the applicable credentials list, and if
              credential protection for a credential is marked as
              userVerificationRequired or
              userVerificationOptionalWithCredentialIDList, and the
              pinUvAuthParam is missing from the input map, remove that
              credential from the applicable credentials list.

          4.  If the applicable credentials list is empty, return
              CTAP2_ERR_NO_IDPS.

          5.  Let numberOfIdPs be the number of applicable credentials
              found.

      8.  Authenticator returns an authenticatorFederationManagement
          response with following parameters:

          -  idp (0x01): PublicKeyCredentialRpEntity, where the id field
             MUST be included and other fields MAY be included.

          -  totalIdps (0x02): Total number of IdPs present on the
             authenticator.  This can vary depending on if a
             pinUvAuthParam was sent with the request.

   *  Platform on receiving more than 1 totalIdps, performs following
      procedure for (totalIdps - 1 ) number of times:

      -  Platform sends authenticatorFederationManagement command with
         following parameters:

         o  subCommand (0x01): enumerateIdPsGetNextIdP (0x02).

      -  Authenticator on receiving such enumerateIdPsGetNextIdP
         subCommand returns authenticatorFederationManagement response
         with following parameters:




Kupris, et al.            Expires 1 August 2024                 [Page 8]

Internet-Draft                   A-WAYF                     January 2024


         o  idp (0x01): PublicKeyCredentialRpEntity, where the id field
            MUST be included and other fields MAY be included.

5.  CTAP2 Status codes

   This extension also introduces a new status code that has to be added
   to the table of available status codes.

    +======+===================+======================================+
    | Code |        Name       |             Description              |
    +======+===================+======================================+
    | 0xE0 | CTAP2_ERR_NO_IDPS |  There are no available IdPs.  This  |
    |      |                   |  can have two reasons: 1) there are  |
    |      |                   |  really no discoverable credentials  |
    |      |                   |  marked as federation key 2) there   |
    |      |                   | are federation credentials that have |
    |      |                   |    a credential protection policy    |
    |      |                   | greater than optional but the client |
    |      |                   |   didn't provide a pinUvAuthToken.   |
    +------+-------------------+--------------------------------------+

                                  Table 5

6.  Security Considerations

7.  References

7.1.  Normative References

   [CTAP]     Bradley, J., Hodges, J., Jones, M. B., Kumar, A.,
              Lindemann, R., and J. Verrept, "Client to Authenticator
              Protocol (CTAP)", 21 March 2023,
              <https://fidoalliance.org/specs/fido-v2.2-rd-20230321/
              fido-client-to-authenticator-protocol-v2.2-rd-
              20230321.html#getPinUvAuthTokenUsingPinWithPermissions>.

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", March 1997,
              <https://www.rfc-editor.org/info/rfc2119>.

   [RFC8174]  Leiba, B., "Ambiguity of Uppercase vs Lowercase in RFC
              2119 Key Words", May 2017,
              <https://www.rfc-editor.org/info/rfc8174>.

7.2.  Informative References






Kupris, et al.            Expires 1 August 2024                 [Page 9]

Internet-Draft                   A-WAYF                     January 2024


   [WebAuthn] Hodges, J., Jones, J. C., Jones, M. B., Kumar, A., and E.
              Lundberg, "Web Authentication An API for accessing Public
              Key Credentials Level 2", 8 April 2021,
              <https://www.w3.org/TR/webauthn/>.

Authors' Addresses

   Erwin Kupris
   Email: erwin.kupris@hm.edu


   Tobias Hilbig
   Email: tobias.hilbig@hm.edu


   David Pierre Sugar
   Email: sugar@hm.edu


   Thomas Schreck
   Email: thomas.schreck@hm.edu






























Kupris, et al.            Expires 1 August 2024                [Page 10]
